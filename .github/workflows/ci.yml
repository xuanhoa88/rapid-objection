name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: "0 2 * * *"

env:
  NODE_VERSION: "22.x"
  CACHE_VERSION: v1

jobs:
  # Code Quality and Linting
  lint:
    name: üîç Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

  # Unit and Integration Tests
  test:
    name: üß™ Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["16.x", "18.x", "20.x", "22.x"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # Build and Bundle Analysis
  build:
    name: üî® Build & Bundle Analysis
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            coverage/
          retention-days: 30

  # Performance Benchmarks
  benchmark:
    name: ‚ö° Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run benchmarks
        run: npm run benchmark:ci

      - name: Check benchmark results
        run: |
          echo "Checking for benchmark results file..."
          ls -la benchmarks/
          if [ -d "benchmarks/results" ]; then
            echo "Results directory exists:"
            ls -la benchmarks/results/
          else
            echo "Results directory does not exist!"
            exit 1
          fi
          if [ -f "benchmarks/results/benchmark-results.txt" ]; then
            echo "Benchmark results file found:"
            cat benchmarks/results/benchmark-results.txt
          else
            echo "Benchmark results file not found!"
            exit 1
          fi

